% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/panel_directlabels.R
\name{panel.directlabel}
\alias{panel.directlabel}
\title{Point labels for scatterplots}
\usage{
panel.directlabel(x, y, groups = NULL, subscripts = NULL,
  labels = NULL, col = NULL, method = directlabels::smart.grid,
  draw_text = TRUE, draw_line = TRUE, draw_box = FALSE,
  box_fill = grey(0.95), box_line = NA, ...)
}
\arguments{
\item{x, y}{(numeric) vectors representing x and y coordinates of points}

\item{groups}{grouping variable passed down from xyplot (does not need to be specified)}

\item{subscripts}{subscripts passed down from xyplot (does not need to be specified)}

\item{labels}{(character) vector of labels to be plotted, if NULL, groups are used
This resembles the behavior of the original \code{directlabels} functions}

\item{col}{(charcater) color (vector) to be used for labels and lines}

\item{method}{(list) the positioning method, default is \code{directlabels::smart.grid}}

\item{draw_text}{(logical) whether to draw text labels or not (default: TRUE)}

\item{draw_line}{(logical) whether to draw a line to labels or not (default: TRUE)}

\item{draw_box}{(logical) whether to draw a box around labels or not (default: FALSE)}

\item{box_fill}{(character) color of the box fill (default: light grey)}

\item{box_line}{(character) color of the box border (default: none)}

\item{...}{other arguments passed to the function}
}
\description{
Draw text labels for all points of a scatterplot using directlabels package
}
\examples{
library(grid)
library(lattice)

data("mtcars")
mtcars$car <- rownames(mtcars)

# A standard example using lattice grouping and paneling
xyplot(mpg ~ wt | factor(cyl), mtcars,
  groups = cyl, pch = 19, labels = mtcars$car,
  as.table = TRUE, layout = c(3, 1),
  panel = function(x, y, ...) {
    panel.xyplot(x, y, ...)
    panel.directlabel(x, y, draw_box = TRUE, ...)
  }
)

# A similar plot but without grouping. This requires explicit
# use of subscripts
xyplot(mpg ~ wt | factor(cyl), mtcars,
  pch = 19, labels = mtcars$car,
  as.table = TRUE, layout = c(3, 1),
  panel = function(x, y, subscripts, ...) {
    panel.xyplot(x, y, ...)
    panel.directlabel(x, y, draw_box = TRUE, subscripts = subscripts, ...)
  }
)

}
